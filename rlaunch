#!/bin/bash
#
# Usage:
#  rlaunch kvm                   Run kvm
#  rlaunch kvm-cp                Run kvm with a copy of disk image
#  rlaunch qemu                  Run qemu
#  rlaunch s2e [QEMU_ARGS]       Run s2e-qemu
#  rlaunch s2e-gdb [QEMU_ARGS]   Run s2e-qemu in GDB
# 

set -e -u

HOST='dslab-vader1.epfl.ch'

# telnet port for qemu monitor
QPORT=4444

# VNC display number
VNC=7

# common qemu args
GDB=
QARGS=
QARGS+=" -m 1G"
QARGS+=" -serial file:serial.txt"
QARGS+=" -monitor telnet:${HOST}:${QPORT},server,nowait"
QARGS+=" -vnc :${VNC}"

if [ $# -eq 0 ]; then
	echo 'You have to specify target type'
	exit 1
fi

TYPE=$1
shift
case ${TYPE} in
	kvm|kvm-cp)
		QEMU="qemu-system-i386"
		QARGS+=" -enable-kvm"
		QARGS+=" -net nic,model=pcnet -net user"
		if [ ${TYPE} == 'kvm' ]; then
			QARGS+=" -drive file=\${IMAGE}/image.raw.s2e"
		else
			QARGS+=" -drive file=\${IMAGE}/image.raw.s2e.copy"
		fi
		;;
	qemu)
		QEMU="\${BUILD}/qemu-release/i386-softmmu/qemu-system-i386"
		QARGS+=" -drive file=\${IMAGE}/image.raw.s2e,cache=writeback,format=s2e"
		QARGS+=" -net none"
		;;
	s2e|s2e-gdb)
		QEMU="\${BUILD}/qemu-release/i386-s2e-softmmu/qemu-system-i386"
		QARGS+=" -drive file=\${IMAGE}/image.raw.s2e,cache=writeback,format=s2e"
		QARGS+=" -net none"
		QARGS+=" -s2e-config-file \${IMAGE}/s2e-config.lua"
		QARGS+=" -loadvm ready"
		QARGS+=" $*"
		if [ ${TYPE} == 's2e-gdb' ]; then
			GDB+="truncate -s0 gdb.cfg                   &&"
			GDB+="echo 'handle SIG38 noprint' >> gdb.cfg &&"
			GDB+="echo 'run'                  >> gdb.cfg &&"
			GDB+="gdb -x gdb.cfg --args"
		fi
		;;
	*)
		echo 'Invalid arguments'; exit 1
		;;
esac

close_qemu()
{
	trap - INT

	expect <<-EOF
		set send_slow {1 .01}
		spawn telnet ${HOST} ${QPORT}
		expect {
			"(qemu) "
		}
		send -s "q\n\n"
		send_user "\n"
	EOF
}

# VNC connection loop
VNCLOOP=
VNCLOOP+="for i in {0..19}; do"
VNCLOOP+=" echo 'Connecting to VNC...';"
VNCLOOP+=" gvncviewer ${HOST}:${VNC} 2>/dev/null | grep 'Connected' >/dev/null && break;"
VNCLOOP+=" sleep 0.5;"
VNCLOOP+="done"

# remote command
SSHCMD=
SSHCMD+="export IMAGE=\${HOME}/workspace/image &&"
SSHCMD+="export BUILD=\${HOME}/workspace/build &&"
SSHCMD+="export S2E_PAYLOAD=\${IMAGE}          &&"
SSHCMD+="export WINDOWS_FS=\${IMAGE}/guestfs   &&"
SSHCMD+="mkdir -p \${IMAGE}/out                &&"
SSHCMD+="cd \${IMAGE}/out                      &&"
SSHCMD+="${GDB} ${QEMU} ${QARGS}"

#
#
#

# start VNC connection loop
bash -c "${VNCLOOP}" &
VNCLOOP_PID=$!

# close qemu on Ctrl+C
trap close_qemu INT

# launch qemu on remote host
ssh ${HOST} "${SSHCMD}" || kill ${VNCLOOP_PID}

